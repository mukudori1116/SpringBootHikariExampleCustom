# The maximum number of milliseconds that a client will wait for a connection from the pool. (Default: 30000)
connectionTimeout=30000

# The maximum amount of time that a connection is allowed to sit idle in the pool. (Default: 600000)
idleTimeout=600000

# The maximum lifetime of a connection in milliseconds. (Default: 1800000)
maxLifetime=1800000

# Controls the default auto-commit behavior of connections returned from the pool. (Default: true)
autoCommit=true

# https://github.com/aws/aws-advanced-jdbc-wrapper/blob/d4d7407ebfe924fefee2d0095d85409c35af93a2/docs/using-the-jdbc-driver/using-plugins/UsingTheFailoverPlugin.md#hikaricp
exceptionOverrideClassName=software.amazon.jdbc.util.HikariCPSQLException

# The maximum size that the pool is allowed to reach, including both idle and in-use connections. (Default: 10)
maximumPoolSize=20

# The minimum number of idle connections that should be maintained in the pool. (Default: 10)
minimumIdle=2

# The default catalog to be set on the connection.
# catalog=

# A custom query to execute on a new connection when it is obtained from the pool.
# connectionInitSql=

# A query that will be executed at connection creation time to validate that the connection is usable.
# connectionTestQuery=

# The escape character to use if none is specified on the connection.
# escapeCharacter=

# Properties passed to the HealthCheckRegistry, as key-value pairs.
# healthCheckProperties=

# The HealthCheckRegistry implementation to use.
# healthCheckRegistry=

# How long in seconds to wait for the pool to be initialized. (Default: 1)
# initializationFailTimeout=1

# Whether to isolate internal pool queries, such as the connection alive check, in their own transaction.
# isolateInternalQueries=

# A semicolon-separated list of JDBC interceptor class names.
# jdbcInterceptors=

# The time in milliseconds to track a connection when it is borrowed from the pool, to help detect leaked connections. (Default: 0)
# leakDetectionThreshold=0

# The timeout value in milliseconds to use for queries that are not part of the normal query execution. Used for connection initialization queries, health checks, and other internal queries.
# longTimeout=

# The MetricRegistry implementation to use.
# metricRegistry=

# The MetricsTrackerFactory implementation to use.
# metricsTrackerFactory=

# The number of partitions to create in the pool. Each partition behaves as an independent sub-pool.
# partitionCount=

# Whether connections obtained from the pool will be read-only.
# readOnly=

# Whether JMX management beans should be registered or not. (Default: false)
# registerMbeans=false

# The ScheduledExecutorService implementation to use.
# scheduledExecutorService=

# The timeout in milliseconds to use when validating a connection before returning it from the pool. (Default: 5000)
# validationTimeout=5000

# Whether to allow pool suspension through the HikariCP API.
# allowPoolSuspension=
